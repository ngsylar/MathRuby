class WrongNumberOfPlayersError < StandardError ; end
class NoSuchStrategyError < StandardError ; end

class RockPaperScissors
    WIN_RULES = [['R', 'S'], ['S', 'P'], ['P', 'R']]
    LOS_RULES = WIN_RULES.map { |event| event.reverse }

    def battle (orig_game)
        raise WrongNumberOfPlayersError unless orig_game.length == 2
        game = [ orig_game[0][1].upcase, orig_game[1][1].upcase ]
        name = [ orig_game[0][0], orig_game[1][0] ]

        if WIN_RULES.include?(game)
            puts "#{name[0]} beat #{name[1]} since #{game[0]} > #{game[1]}"
            [ name[0], game[0] ]
        elsif LOS_RULES.include?(game)
            puts "#{name[1]} beat #{name[0]} since #{game[1]} > #{game[0]}"
            [ name[1], game[1] ]
        else raise NoSuchStrategyError
        end
    end

    def tournament (diagram)
        raise WrongNumberOfPlayersError unless validate_n_players(diagram)
        diagram.each_with_index do |bracket, i|         # para cada subdiagrama
            break unless number_of_players(diagram) > 2 # enquanto numero de jogadores for maior que 2
            diagram[i] = tournament(bracket)            # entra num subdiagrama mais interno
        end
        battle(diagram)                                 # quando hÃ¡ 2 jogadores no subdiagrama, batalha
    end

    private
    def number_of_players (diagram) ; diagram.flatten.size/2 ; end
    
    def validate_n_players (diagram)                    # campeonato precisa ter 2^n jogadores
        n_players = diagram.flatten.size.to_f/2
        validate = Math.log(n_players, 2)
        return true if validate == validate.to_i
        false
    end
end

rps = RockPaperScissors.new

puts 'SINGLE MATCH'
rps.battle( [ ['Kristen', 'P'], ['Pam', 'S'] ] ) # => returns the list ["Pam", "S"] wins since S>P

puts '', 'TOURNAMENT'
rps.tournament(
    [
        [
            [ ["Kristen", "P"], ["Dave", "S"] ],
            [ ["Richard", "R"], ["Michael", "S"] ],
        ],
        [
            [ ["Allen", "S"], ["Omer", "P"] ],
            [ ["David E.", "R"], ["Richard X.", "P"] ]
        ]
    ]
) # => ["Richard", "R"]
